-- MySQL Script generated by MySQL Workbench
-- Sat Nov  4 15:00:13 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bannarug
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bannarug` ;

-- -----------------------------------------------------
-- Schema bannarug
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bannarug` DEFAULT CHARACTER SET utf8 ;
USE `bannarug` ;

-- -----------------------------------------------------
-- Table `bannarug`.`Book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`Book` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`Book` (
  `bookId` INT NOT NULL AUTO_INCREMENT,
  `bookName` VARCHAR(255) NOT NULL,
  `author` VARCHAR(255) NOT NULL,
  `bookTotalView` INT NOT NULL,
  `bookRating` FLOAT NOT NULL,
  `bookGenre` VARCHAR(45) NOT NULL,
  `bookDetail` LONGTEXT NULL,
  `bookCreateDateTime` DATETIME NULL default current_timestamp,
  `bookUpdateDateTime` DATETIME NULL default current_timestamp on update current_timestamp,
  PRIMARY KEY (`bookId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bannarug`.`Bookmark`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`Bookmark` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`Bookmark` (
  `bookmarkId` INT NOT NULL AUTO_INCREMENT,
  `bb_bookId` INT NOT NULL,
  `bu_userId` INT NOT NULL,
  PRIMARY KEY (`bookmarkId`, `bb_bookId`, `bu_userId`),
  INDEX `fk_Book_has_User_User1_idx` (`bu_userId` ASC) VISIBLE,
  INDEX `fk_Book_has_User_Book1_idx` (`bb_bookId` ASC) VISIBLE,
  CONSTRAINT `fk_Book_has_User_Book1`
    FOREIGN KEY (`bb_bookId`)
    REFERENCES `bannarug`.`Book` (`bookId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Book_has_User_User1`
    FOREIGN KEY (`bu_userId`)
    REFERENCES `bannarug`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bannarug`.`Booktype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`Booktype` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`Booktype` (
  `booktypeId` INT NOT NULL AUTO_INCREMENT,
  `btb_bookId` INT NOT NULL,
  `bookTypeName` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`booktypeId`),
  INDEX `fk_Booktype_Book1_idx` (`btb_bookId` ASC) VISIBLE,
  UNIQUE INDEX `bookTypeName_UNIQUE` (`bookTypeName` ASC) VISIBLE,
  CONSTRAINT `fk_Booktype_Book1`
    FOREIGN KEY (`btb_bookId`)
    REFERENCES `bannarug`.`Book` (`bookId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bannarug`.`FavoriteReview`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`FavoriteReview` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`FavoriteReview` (
  `favoriteReviewId` INT NOT NULL AUTO_INCREMENT,
  `frr_reviewId` INT NOT NULL,
  `fru_userId` INT NOT NULL,
  PRIMARY KEY (`favoriteReviewId`, `frr_reviewId`, `fru_userId`),
  INDEX `fk_Review_has_User_User1_idx` (`fru_userId` ASC) VISIBLE,
  INDEX `fk_Review_has_User_Review1_idx` (`frr_reviewId` ASC) VISIBLE,
  CONSTRAINT `fk_Review_has_User_Review1`
    FOREIGN KEY (`frr_reviewId`)
    REFERENCES `bannarug`.`Review` (`reviewId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Review_has_User_User1`
    FOREIGN KEY (`fru_userId`)
    REFERENCES `bannarug`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bannarug`.`Follower`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`Follower` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`Follower` (
  `followerId` INT NOT NULL AUTO_INCREMENT,
  `userId` INT NOT NULL,
  `followId` INT NOT NULL,
  INDEX `fk_Follower_User1_idx` (`userId` ASC) VISIBLE,
  INDEX `fk_Follower_User2_idx` (`followId` ASC) VISIBLE,
  PRIMARY KEY (`followerId`),
  CONSTRAINT `fk_Follower_User1`
    FOREIGN KEY (`userId`)
    REFERENCES `bannarug`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Follower_User2`
    FOREIGN KEY (`followId`)
    REFERENCES `bannarug`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bannarug`.`History`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`History` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`History` (
  `historyId` INT NOT NULL AUTO_INCREMENT,
  `hu_userId` INT NOT NULL,
  `hb_bookId` INT NOT NULL,
  `historyCreateDateTime` DATETIME NULL default current_timestamp,
  `historyUpdateDateTime` DATETIME NULL default current_timestamp on update current_timestamp,
  PRIMARY KEY (`historyId`, `hu_userId`, `hb_bookId`),
  INDEX `fk_User_has_Book_Book1_idx` (`hb_bookId` ASC) VISIBLE,
  INDEX `fk_User_has_Book_User1_idx` (`hu_userId` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Book_User1`
    FOREIGN KEY (`hu_userId`)
    REFERENCES `bannarug`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Book_Book1`
    FOREIGN KEY (`hb_bookId`)
    REFERENCES `bannarug`.`Book` (`bookId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bannarug`.`Notification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`Notification` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`Notification` (
  `notificationId` INT NOT NULL AUTO_INCREMENT,
  `nu_userId` INT NOT NULL,
  `notificationTitle` VARCHAR(255) NOT NULL,
  `notificationDetail` LONGTEXT NOT NULL,
  `createDateTime` DATETIME NULL default current_timestamp,
  `updateDateTime` DATETIME NULL default current_timestamp on update current_timestamp,
  PRIMARY KEY (`notificationId`),
  INDEX `fk_Notification_User1_idx` (`nu_userId` ASC) VISIBLE,
  CONSTRAINT `fk_Notification_User1`
    FOREIGN KEY (`nu_userId`)
    REFERENCES `bannarug`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bannarug`.`Recomment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`Recomment` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`Recomment` (
  `recommentId` INT NOT NULL AUTO_INCREMENT,
  `rb_booktypeId` INT NOT NULL,
  `ru_userId` INT NOT NULL,
  `viewCount` INT NULL,
  PRIMARY KEY (`recommentId`, `rb_booktypeId`, `ru_userId`),
  INDEX `fk_Booktype_has_User_User1_idx` (`ru_userId` ASC) VISIBLE,
  INDEX `fk_Booktype_has_User_Booktype1_idx` (`rb_booktypeId` ASC) VISIBLE,
  CONSTRAINT `fk_Booktype_has_User_Booktype1`
    FOREIGN KEY (`rb_booktypeId`)
    REFERENCES `bannarug`.`Booktype` (`booktypeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Booktype_has_User_User1`
    FOREIGN KEY (`ru_userId`)
    REFERENCES `bannarug`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bannarug`.`Review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`Review` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`Review` (
  `reviewId` INT NOT NULL AUTO_INCREMENT,
  `rvu_userId` INT NOT NULL,
  `rvb_bookId` INT NOT NULL,
  `reviewTitle` VARCHAR(255) NOT NULL,
  `reviewDetail` LONGTEXT NOT NULL,
  `reviewRating` FLOAT NOT NULL,
  `spoileFlag` INT NOT NULL,
  `reviewTotalLike` INT NOT NULL,
  `reviewTotalDisLike` INT NOT NULL,
  `reviewCreateDateTime` DATETIME NULL default current_timestamp,
  `reviewUpdateDateTime` DATETIME NULL default current_timestamp on update current_timestamp,
  PRIMARY KEY (`reviewId`, `rvu_userId`),
  INDEX `fk_Review_User_idx` (`rvu_userId` ASC) VISIBLE,
  INDEX `fk_Review_Book1_idx` (`rvb_bookId` ASC) VISIBLE,
  CONSTRAINT `fk_Review_User`
    FOREIGN KEY (`rvu_userId`)
    REFERENCES `bannarug`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Review_Book1`
    FOREIGN KEY (`rvb_bookId`)
    REFERENCES `bannarug`.`Book` (`bookId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bannarug`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bannarug`.`User` ;

CREATE TABLE IF NOT EXISTS `bannarug`.`User` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `displayName` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` LONGTEXT NOT NULL,
  `role` VARCHAR(45) NOT NULL,
  `followers` INT NOT NULL,
  `follows` INT NOT NULL,
  `totalReview` INT NOT NULL,
  `totalFavoriteReview` INT NOT NULL,
  `totalLike` INT NOT NULL,
  `bio` LONGTEXT NULL,
  PRIMARY KEY (`userId`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `displayName_UNIQUE` (`displayName` ASC) VISIBLE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
